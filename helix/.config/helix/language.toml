###
# Python
###
[language-server.ruff-lsp]
command = "ruff-lsp"
args = []
# config = { settings = { jedi_config = { environment = '.venv' } } }

[[language]]
name = "python"
scope = "source.python"
roots = []
injection-regex = "python"
file-types = ["py"]
comment-token = "#"
auto-format = true
formatter = { command = "black", args = ["-", "--quiet"] }
language-servers = ['ruff-lsp']
indent = { tab-width = 4, unit = "    " }

[[language]]
name = "rust"
file-types = ["rs"]
config.check.command = "clippy"

[[language]]
name = "html"
formatter = { command = 'prettier', args = ["--parser", "html"] }
file-types = ["html"]

[[language]]
name = "json"
formatter = { command = 'prettier', args = ["--parser", "json"] }
file-types = ["json"]

[[language]]
name = "css"
formatter = { command = 'prettier', args = ["--parser", "css"] }
file-types = ["css"]

[[language]]
name = "javascript"
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true
file-types = ["js"]

[[language]]
name = "typescript"
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true
file-types = ["ts"]


###
# Toml
###
[language-server.taplo-lsp]
command = "taplo"
args = ["lsp", "stdio"]

[[language]]
name = "toml"
scope = "source.toml"
roots = ["*.toml"]
auto-format = true
injection-regex = "toml"
file-types = ["toml"]
comment-token = "#"
language-servers = ["taplo-lsp"]
indent = { tab-width = 2, unit = "  " }

###
# Yaml
###
[language-server.yaml-lsp]
command = "yaml-language-server"
args = ["--stdio"]
language-id = "yaml"

[[language]]
name = "yaml"
scope = "source.yaml"
file-types = ["yml", "yaml"]
roots = []
comment-token = "#"
indent = { tab-width = 2, unit = "  " }
injection-regex = "yml|yaml"
auto-format = true
language-servers = ["yaml-lsp"]
formatter = { command = 'yamlfmt' }


###
# Markdown
###
# [[language]]
# name = "markdown"
# scope = "text.markdown"
# roots = []
# auto-format = true
# file-types = ["md"]
# comment-token = "#"
# language-server = { command = "marksman" }
# formatter = { command = 'deno', args = ["fmt", "-", "--ext", "md"] }


###
# Latex
###
[language-server.tex-lsp]
command = "texlab"

[[language]]
name = "latex"
scope = "source.tex"
injection-regex = "tex"
file-types = ["tex"]
roots = []
comment-token = "%"
language-servers = ["texlab"]
indent = { tab-width = 4, unit = "\t" }

[[grammar]]
name = "latex"
source = { git = "https://github.com/latex-lsp/tree-sitter-latex", rev = "6b7ea839307670e6bda011f888717d3a882ecc09" }

[[language]]
name = "bibtex"
scope = "source.bib"
injection-regex = "bib"
file-types = ["bib"]
roots = []
comment-token = "%"
language-servers = ["tex-lsp"]
indent = { tab-width = 4, unit = "\t" }
auto-format = true

[language.formatter]
command = 'bibtex-tidy'
args = [
  "-",
  "--curly",
  "--drop-all-caps",
  "--remove-empty-fields",
  "--sort-fields",
  "--sort=year,author,id",
  "--strip-enclosing-braces",
  "--trailing-commas",
]

[[grammar]]
name = "bibtex"
source = { git = "https://github.com/latex-lsp/tree-sitter-bibtex", rev = "ccfd77db0ed799b6c22c214fe9d2937f47bc8b34" }

###
# Rust
###
[language-server.rust-analyzer]
command = "rust-analyzer"

[language-server.rust-analyzer.config]
inlayHints.bindingModeHints.enable = false
inlayHints.closingBraceHints.minLines = 10
inlayHints.closureReturnTypeHints.enable = "with_block"
inlayHints.discriminantHints.enable = "fieldless"
inlayHints.lifetimeElisionHints.enable = "skip_trivial"
inlayHints.typeHints.hideClosureInitialization = false

[[grammar]]
name = "rust"
source = { git = "https://github.com/tree-sitter/tree-sitter-rust", rev = "0431a2c60828731f27491ee9fdefe25e250ce9c9" }

[[language]]
name = "rust"
scope = "source.rust"
injection-regex = "rust"
file-types = ["rs"]
roots = ["Cargo.toml", "Cargo.lock"]
auto-format = true
comment-token = "//"
language-servers = ["rust-analyzer"]
indent = { tab-width = 4, unit = "    " }
