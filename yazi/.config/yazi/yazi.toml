[manager]
layout = [1, 3, 4]
# sort_by = "natural"
sort_by = "alphabetical"
sort_reverse = false
sort_dir_first = true
linemode = "size"
show_hidden = false
show_symlink = false

[preview]
tab_size = 2
max_width = 26000
max_height = 29000
cache_dir = ""

[input]
# cd
cd_title = "Change directory:"
cd_origin = "top-center"
cd_offset = [0, 2, 50, 3]

# create
create_title = "Create:"
create_origin = "top-center"
create_offset = [0, 2, 50, 3]

# rename
rename_title = "Rename:"
rename_origin = "hovered"
rename_offset = [0, 1, 50, 3]

# trash
trash_title = "Move {n} selected file{s} to trash? (y/N)"
trash_origin = "top-center"
trash_offset = [0, 2, 50, 3]

# delete
delete_title = "Delete {n} selected file{s} permanently? (y/N)"
delete_origin = "top-center"
delete_offset = [0, 2, 50, 3]

# find
find_title = ["Find next:", "Find previous:"]
find_origin = "top-center"
find_offset = [0, 2, 50, 3]

# search
search_title = "Search:"
search_origin = "top-center"
search_offset = [0, 2, 50, 3]

# shell
shell_title = ["Shell:", "Shell (block):"]
shell_origin = "top-center"
shell_offset = [0, 2, 50, 3]

# overwrite
overwrite_title = "Overwrite an existing file? (y/N)"
overwrite_origin = "top-center"
overwrite_offset = [0, 2, 50, 3]

# quit
quit_title = "{n} task{s} running, sure to quit? (y/N)"
quit_origin = "top-center"
quit_offset = [0, 2, 50, 3]

[select]
open_title = "Open with:"
open_origin = "hovered"
open_offset = [0, 1, 50, 7]

[opener]
folder = [
  { exec = 'hyprctl dispatch exec "[float; size 60% 60%; center 1] xdg-open" "$@"', desc = "Open in GUI File Manager" },
  { exec = '$EDITOR "$@"' },
]
archive = [{ exec = 'xdg-open "$1"', desc = "Extract here" }]
extract = [
  { exec = 'unar "$1"', desc = "Extract here" },
]

pdf = [{ exec = 'zathura "$1"', desc = "Open" }]
# pdf = [{ exec = 'okular "$1"', desc = "Open" }]
docx = [{ exec = 'xdg-open "$1"', desc = "Open" }]
text = [
  # { exec = 'pypr hide yazi & kitty --detach $EDITOR "$@"', block = true, desc = "Open" },
  { exec = '$EDITOR "$@"', block = true, desc = "Open" },
]
image = [
  { exec = 'nsxiv "$@"', desc = "Open" },
  { exec = '''exiftool "$1"; echo "Press enter to exit"; read''', block = true, desc = "Show EXIF" },
]
video = [
  { exec = 'mpv "$@"' },
  { exec = '''mediainfo "$1"; echo "Press enter to exit"; read''', block = true, desc = "Show media info" },
]
audio = [
  { exec = 'mpv "$@"' },
  { exec = '''mediainfo "$1"; echo "Press enter to exit"; read''', block = true, desc = "Show media info" },
]
fallback = [
  { exec = 'open "$@"', desc = "Open" },
  { exec = 'open -R "$@"', desc = "Reveal in Finder" },
]

[open]
rules = [
  { name = "*/", use = "folder" },

  { mime = "text/*", use = "text" },
  { mime = "text/docx", use = "docx" },
  { mime = "image/*", use = "image" },
  { mime = "video/*", use = "video" },
  { mime = "audio/*", use = "audio" },
  { mime = "inode/x-empty", use = "text" },

  { mime = "application/json", use = "text" },
  { mime = "*/javascript", use = "text" },

  { mime = "application/pdf", use = "pdf" },

  # { mime = "application/zip", use = "archive" },
  # { mime = "application/gzip", use = "archive" },
  # { mime = "application/x-bzip", use = "archive" },
  # { mime = "application/x-bzip2", use = "archive" },
  # { mime = "application/x-tar", use = "archive" },
  # { mime = "application/x-7z-compressed", use = "archive" },
  # { mime = "application/x-rar", use = "archive" },

  { mime = "application/zip", use = ["extract"] },
  { mime = "application/gzip", use = ["extract"] },
  { mime = "application/x-tar", use = ["extract"] },
  { mime = "application/x-bzip", use = ["extract"] },
  { mime = "application/x-bzip2", use = ["extract"] },
  { mime = "application/x-7z-compressed", use = ["extract"] },
  { mime = "application/x-rar", use = ["extract"] },

  { mime = "*", use = "fallback" },
]

[tasks]
micro_workers = 5
macro_workers = 10
bizarre_retry = 5
image_alloc = 536870912 # 512MB
image_bound = [0, 0]

[log]
enabled = false

[plugins]
# preload = ["~/.config/yazi/ui.lua", "~/.config/yazi/symlink.lua"]
# preload = ["~/.config/yazi/hide_statusbar.lua"]
